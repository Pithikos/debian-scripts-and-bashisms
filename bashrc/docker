# Shell to the last container
function last_container {
  if [[ $(last_container_id) ]]; then
    docker exec -it $(last_container_id) bash
  else
    echo "No containers running."
  fi
}

# Gives the ID of the last container 
function last_container_id {
  docker ps -q | tail -n 1
}

# Watches over docker containers running without taking
# the whole screen
function _docker_ps_compact {
  if [[ $(docker ps -q) ]]; then
    DELI='|'
    delimeted_output=`docker ps -q | xargs docker inspect --format="{{.Id}}$DELI\e[1m{{.Config.Image}}\e[0m$DELI\e[2m{{.Config.Cmd}}\e[0m$DELI{{range \\\$p, \\\$conf := .NetworkSettings.Ports}}\e[34m{{\\\$p}}\e[0m->\e[34m{{(index \\$conf 0).HostPort}}\e[0m{{end}}$DELI\e[92m{{.NetworkSettings.IPAddress}}\e[0m"`
    columnized_output=`echo "$delimeted_output" | sed "s/$DELI$DELI/$DELI  $DELI/g" | column -t -s=$DELI`
    filtered_output=`echo "$columnized_output" | cut -c 1-6,65-`
    echo -e "$filtered_output"
  else
    echo "No containers running."
  fi
}
export -f _docker_ps_compact
alias watchdocker='watch --color bash -c _docker_ps_compact'
